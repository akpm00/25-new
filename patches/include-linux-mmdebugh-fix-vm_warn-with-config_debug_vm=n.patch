From: Andrew Morton <akpm@linux-foundation.org>
Subject: include/linux/mmdebug.h: fix VM_WARN[_*]() with CONFIG_DEBUG_VM=n

These macros cause the build to break when someone uses their return value
with CONFIG_DEBUG_VM=n:

	if (VM_WARN(from > to, "%s called with a negative range\n", __func__))
 		return -EINVAL;

mm/hugetlb.c: In function 'hugetlb_reserve_pages':
mm/hugetlb.c:4378: error: void value not ignored as it ought to be

Fix this up.

Reported-by: Michal Hocko <mhocko@kernel.org>
Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---

 include/linux/mmdebug.h |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff -puN include/linux/mmdebug.h~include-linux-mmdebugh-fix-vm_warn-with-config_debug_vm=n include/linux/mmdebug.h
--- a/include/linux/mmdebug.h~include-linux-mmdebugh-fix-vm_warn-with-config_debug_vm=n
+++ a/include/linux/mmdebug.h
@@ -46,10 +46,10 @@ void dump_mm(const struct mm_struct *mm)
 #define VM_BUG_ON_PAGE(cond, page) VM_BUG_ON(cond)
 #define VM_BUG_ON_VMA(cond, vma) VM_BUG_ON(cond)
 #define VM_BUG_ON_MM(cond, mm) VM_BUG_ON(cond)
-#define VM_WARN_ON(cond) BUILD_BUG_ON_INVALID(cond)
-#define VM_WARN_ON_ONCE(cond) BUILD_BUG_ON_INVALID(cond)
-#define VM_WARN_ONCE(cond, format...) BUILD_BUG_ON_INVALID(cond)
-#define VM_WARN(cond, format...) BUILD_BUG_ON_INVALID(cond)
+#define VM_WARN_ON(cond) ({ cond; })
+#define VM_WARN_ON_ONCE(cond) ({ cond; })
+#define VM_WARN_ONCE(cond, format...) ({ cond; })
+#define VM_WARN(cond, format...) ({ cond; })
 #endif
 
 #ifdef CONFIG_DEBUG_VIRTUAL
_
