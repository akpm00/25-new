From: Liam Howlett <liam.howlett@oracle.com>
Subject: mm/mmap: fix potential leak on do_mas_align_munmap()
Date: Fri, 13 May 2022 14:15:53 +0000

There is a leak when the system is low on resources and fails to allocate
enough memory to complete the munmap task.  Fix this by adding the
necessary free operations in the unwinding.

Link: https://lkml.kernel.org/r/20220513141548.2019143-1-Liam.Howlett@oracle.com
Fixes: a760774e7b7b (mm: start tracking VMAs with maple tree)
Signed-off-by: Liam R. Howlett <Liam.Howlett@oracle.com>
Reported-by: Qian Cai <quic_qiancai@quicinc.com>
Cc: Stephen Rothwell <sfr@canb.auug.org.au>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---

 mm/mmap.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

--- a/mm/mmap.c~mm-remove-the-vma-linked-list-fix
+++ a/mm/mmap.c
@@ -2394,7 +2394,7 @@ do_mas_align_munmap(struct ma_state *mas
 		return -ENOMEM;
 
 	if (mas_preallocate(&mas_detach, vma, GFP_KERNEL))
-		return -ENOMEM;
+		goto detach_alloc_fail;
 
 	mas->last = end - 1;
 	/*
@@ -2533,6 +2533,8 @@ do_mas_align_munmap(struct ma_state *mas
 map_count_exceeded:
 split_failed:
 userfaultfd_error:
+	mas_destroy(&mas_detach);
+detach_alloc_fail:
 	mas_destroy(mas);
 	return error;
 }
_
