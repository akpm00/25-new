From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Subject: lib/irq_poll: Add local_bh_disable() in irq_poll_cpu_dead()

irq_poll_cpu_dead() pulls the blk_cpu_iopoll backlog from the dead CPU and
raises the POLL softirq with __raise_softirq_irqoff() on the CPU it is
running on.  That just sets the bit in the pending softirq mask.

This means the handling of the softirq is delayed until the next interrupt
or a local_bh_disable/enable() pair.  As a consequence the CPU on which
this code runs can reach idle with the POLL softirq pending, which
triggers a warning in the NOHZ idle code.

Add a local_bh_disable/enable() pair around the interrupts disabled
section in irq_poll_cpu_dead().  local_bh_enable will handle the pending
softirq.

[@linutronix.de: massaged changelog and comment]
Link: https://lkml.kernel.org/r/87k0bxgl27.ffs@tglx
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Cc: Christoph Hellwig <hch@infradead.org>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
